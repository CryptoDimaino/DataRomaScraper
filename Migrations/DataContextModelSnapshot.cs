// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MySQLScrapper.Data;

namespace DataRomaScraper.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("MySQLScrapper.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DatePulled")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DateRecorded")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HoldingURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumberOfStocks")
                        .HasColumnType("int");

                    b.Property<double>("PortfolioValue")
                        .HasColumnType("double");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("MySQLScrapper.Models.CompanyHolding", b =>
                {
                    b.Property<int>("CompanyHoldingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("ChangePercentage")
                        .HasColumnType("double");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DatePulled")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DateRecorded")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("int");

                    b.Property<double>("PercentOfPortfolio")
                        .HasColumnType("double");

                    b.Property<string>("RecentActivity")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("ReportedPrice")
                        .HasColumnType("double");

                    b.Property<string>("StockName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Ticker")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("CompanyHoldingId");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyHoldings");
                });

            modelBuilder.Entity("MySQLScrapper.Models.CompanyHolding", b =>
                {
                    b.HasOne("MySQLScrapper.Models.Company", "Company")
                        .WithMany("CompanyHoldings")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("MySQLScrapper.Models.Company", b =>
                {
                    b.Navigation("CompanyHoldings");
                });
#pragma warning restore 612, 618
        }
    }
}
